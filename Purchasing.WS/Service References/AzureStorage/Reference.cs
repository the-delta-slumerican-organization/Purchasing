//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Purchasing.WS.AzureStorage
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportInput", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class ExportInput : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private Purchasing.WS.AzureStorage.BlobCredentials BlobCredentialsField;
        
        private Purchasing.WS.AzureStorage.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Purchasing.WS.AzureStorage.BlobCredentials BlobCredentials
        {
            get
            {
                return this.BlobCredentialsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BlobCredentialsField, value) != true))
                {
                    this.BlobCredentialsField = value;
                    this.RaisePropertyChanged("BlobCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Purchasing.WS.AzureStorage.ConnectionInfo ConnectionInfo
        {
            get
            {
                return this.ConnectionInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true))
                {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlobCredentials", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Purchasing.WS.AzureStorage.BlobSharedAccessKeyCredentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Purchasing.WS.AzureStorage.BlobStorageAccessKeyCredentials))]
    public partial class BlobCredentials : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string UriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri
        {
            get
            {
                return this.UriField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UriField, value) != true))
                {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionInfo", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class ConnectionInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string DatabaseNameField;
        
        private string PasswordField;
        
        private string ServerNameField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseName
        {
            get
            {
                return this.DatabaseNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DatabaseNameField, value) != true))
                {
                    this.DatabaseNameField = value;
                    this.RaisePropertyChanged("DatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PasswordField, value) != true))
                {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName
        {
            get
            {
                return this.ServerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true))
                {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlobSharedAccessKeyCredentials", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class BlobSharedAccessKeyCredentials : Purchasing.WS.AzureStorage.BlobCredentials
    {
        
        private string SharedAccessKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SharedAccessKey
        {
            get
            {
                return this.SharedAccessKeyField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SharedAccessKeyField, value) != true))
                {
                    this.SharedAccessKeyField = value;
                    this.RaisePropertyChanged("SharedAccessKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlobStorageAccessKeyCredentials", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class BlobStorageAccessKeyCredentials : Purchasing.WS.AzureStorage.BlobCredentials
    {
        
        private string StorageAccessKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageAccessKey
        {
            get
            {
                return this.StorageAccessKeyField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StorageAccessKeyField, value) != true))
                {
                    this.StorageAccessKeyField = value;
                    this.RaisePropertyChanged("StorageAccessKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectiveExportInput", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class SelectiveExportInput : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private Purchasing.WS.AzureStorage.BlobCredentials BlobCredentialsField;
        
        private Purchasing.WS.AzureStorage.ConnectionInfo ConnectionInfoField;
        
        private Purchasing.WS.AzureStorage.TableName[] TablesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Purchasing.WS.AzureStorage.BlobCredentials BlobCredentials
        {
            get
            {
                return this.BlobCredentialsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BlobCredentialsField, value) != true))
                {
                    this.BlobCredentialsField = value;
                    this.RaisePropertyChanged("BlobCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Purchasing.WS.AzureStorage.ConnectionInfo ConnectionInfo
        {
            get
            {
                return this.ConnectionInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true))
                {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Purchasing.WS.AzureStorage.TableName[] Tables
        {
            get
            {
                return this.TablesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TablesField, value) != true))
                {
                    this.TablesField = value;
                    this.RaisePropertyChanged("Tables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableName", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class TableName : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string NameField;
        
        private string SchemaNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemaName
        {
            get
            {
                return this.SchemaNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SchemaNameField, value) != true))
                {
                    this.SchemaNameField = value;
                    this.RaisePropertyChanged("SchemaName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportInput", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class ImportInput : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string AzureEditionField;
        
        private Purchasing.WS.AzureStorage.BlobCredentials BlobCredentialsField;
        
        private Purchasing.WS.AzureStorage.ConnectionInfo ConnectionInfoField;
        
        private int DatabaseSizeInGBField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AzureEdition
        {
            get
            {
                return this.AzureEditionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AzureEditionField, value) != true))
                {
                    this.AzureEditionField = value;
                    this.RaisePropertyChanged("AzureEdition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Purchasing.WS.AzureStorage.BlobCredentials BlobCredentials
        {
            get
            {
                return this.BlobCredentialsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BlobCredentialsField, value) != true))
                {
                    this.BlobCredentialsField = value;
                    this.RaisePropertyChanged("BlobCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Purchasing.WS.AzureStorage.ConnectionInfo ConnectionInfo
        {
            get
            {
                return this.ConnectionInfoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true))
                {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DatabaseSizeInGB
        {
            get
            {
                return this.DatabaseSizeInGBField;
            }
            set
            {
                if ((this.DatabaseSizeInGBField.Equals(value) != true))
                {
                    this.DatabaseSizeInGBField = value;
                    this.RaisePropertyChanged("DatabaseSizeInGB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusInput", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class StatusInput : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string PasswordField;
        
        private string RequestIdField;
        
        private string ServerNameField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PasswordField, value) != true))
                {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true))
                {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string ServerName
        {
            get
            {
                return this.ServerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true))
                {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusInfo", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SqlServer.Management.Dac.Servic" +
        "eTypes")]
    public partial class StatusInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string BlobUriField;
        
        private string DatabaseNameField;
        
        private string ErrorMessageField;
        
        private System.DateTime LastModifiedTimeField;
        
        private System.DateTime QueuedTimeField;
        
        private string RequestIdField;
        
        private string RequestTypeField;
        
        private string ServerNameField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlobUri
        {
            get
            {
                return this.BlobUriField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BlobUriField, value) != true))
                {
                    this.BlobUriField = value;
                    this.RaisePropertyChanged("BlobUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseName
        {
            get
            {
                return this.DatabaseNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DatabaseNameField, value) != true))
                {
                    this.DatabaseNameField = value;
                    this.RaisePropertyChanged("DatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true))
                {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedTime
        {
            get
            {
                return this.LastModifiedTimeField;
            }
            set
            {
                if ((this.LastModifiedTimeField.Equals(value) != true))
                {
                    this.LastModifiedTimeField = value;
                    this.RaisePropertyChanged("LastModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime QueuedTime
        {
            get
            {
                return this.QueuedTimeField;
            }
            set
            {
                if ((this.QueuedTimeField.Equals(value) != true))
                {
                    this.QueuedTimeField = value;
                    this.RaisePropertyChanged("QueuedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true))
                {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType
        {
            get
            {
                return this.RequestTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true))
                {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName
        {
            get
            {
                return this.ServerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true))
                {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StatusField, value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Purchasing.WS.AzureStorage.IDACWebService")]
    public interface IDACWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/Export", ReplyAction="http://tempuri.org/IDACWebService/ExportResponse")]
        System.Guid Export(Purchasing.WS.AzureStorage.ExportInput exportInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/Export", ReplyAction="http://tempuri.org/IDACWebService/ExportResponse")]
        System.Threading.Tasks.Task<System.Guid> ExportAsync(Purchasing.WS.AzureStorage.ExportInput exportInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/SelectiveExport", ReplyAction="http://tempuri.org/IDACWebService/SelectiveExportResponse")]
        System.Guid SelectiveExport(Purchasing.WS.AzureStorage.SelectiveExportInput exportInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/SelectiveExport", ReplyAction="http://tempuri.org/IDACWebService/SelectiveExportResponse")]
        System.Threading.Tasks.Task<System.Guid> SelectiveExportAsync(Purchasing.WS.AzureStorage.SelectiveExportInput exportInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/ExportWithMaskedData", ReplyAction="http://tempuri.org/IDACWebService/ExportWithMaskedDataResponse")]
        System.Guid ExportWithMaskedData(Purchasing.WS.AzureStorage.ExportInput exportInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/ExportWithMaskedData", ReplyAction="http://tempuri.org/IDACWebService/ExportWithMaskedDataResponse")]
        System.Threading.Tasks.Task<System.Guid> ExportWithMaskedDataAsync(Purchasing.WS.AzureStorage.ExportInput exportInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/Import", ReplyAction="http://tempuri.org/IDACWebService/ImportResponse")]
        System.Guid Import(Purchasing.WS.AzureStorage.ImportInput importInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/Import", ReplyAction="http://tempuri.org/IDACWebService/ImportResponse")]
        System.Threading.Tasks.Task<System.Guid> ImportAsync(Purchasing.WS.AzureStorage.ImportInput importInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/PostStatus", ReplyAction="http://tempuri.org/IDACWebService/PostStatusResponse")]
        Purchasing.WS.AzureStorage.StatusInfo[] PostStatus(Purchasing.WS.AzureStorage.StatusInput statusInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/PostStatus", ReplyAction="http://tempuri.org/IDACWebService/PostStatusResponse")]
        System.Threading.Tasks.Task<Purchasing.WS.AzureStorage.StatusInfo[]> PostStatusAsync(Purchasing.WS.AzureStorage.StatusInput statusInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/GetStatus", ReplyAction="http://tempuri.org/IDACWebService/GetStatusResponse")]
        Purchasing.WS.AzureStorage.StatusInfo[] GetStatus(string serverName, string userName, string password, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/GetStatus", ReplyAction="http://tempuri.org/IDACWebService/GetStatusResponse")]
        System.Threading.Tasks.Task<Purchasing.WS.AzureStorage.StatusInfo[]> GetStatusAsync(string serverName, string userName, string password, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/Test", ReplyAction="http://tempuri.org/IDACWebService/TestResponse")]
        int Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDACWebService/Test", ReplyAction="http://tempuri.org/IDACWebService/TestResponse")]
        System.Threading.Tasks.Task<int> TestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IDACWebServiceChannel : Purchasing.WS.AzureStorage.IDACWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class DACWebServiceClient : System.ServiceModel.ClientBase<Purchasing.WS.AzureStorage.IDACWebService>, Purchasing.WS.AzureStorage.IDACWebService
    {
        
        public DACWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Guid Export(Purchasing.WS.AzureStorage.ExportInput exportInput)
        {
            return base.Channel.Export(exportInput);
        }
        
        public System.Threading.Tasks.Task<System.Guid> ExportAsync(Purchasing.WS.AzureStorage.ExportInput exportInput)
        {
            return base.Channel.ExportAsync(exportInput);
        }
        
        public System.Guid SelectiveExport(Purchasing.WS.AzureStorage.SelectiveExportInput exportInput)
        {
            return base.Channel.SelectiveExport(exportInput);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SelectiveExportAsync(Purchasing.WS.AzureStorage.SelectiveExportInput exportInput)
        {
            return base.Channel.SelectiveExportAsync(exportInput);
        }
        
        public System.Guid ExportWithMaskedData(Purchasing.WS.AzureStorage.ExportInput exportInput)
        {
            return base.Channel.ExportWithMaskedData(exportInput);
        }
        
        public System.Threading.Tasks.Task<System.Guid> ExportWithMaskedDataAsync(Purchasing.WS.AzureStorage.ExportInput exportInput)
        {
            return base.Channel.ExportWithMaskedDataAsync(exportInput);
        }
        
        public System.Guid Import(Purchasing.WS.AzureStorage.ImportInput importInput)
        {
            return base.Channel.Import(importInput);
        }
        
        public System.Threading.Tasks.Task<System.Guid> ImportAsync(Purchasing.WS.AzureStorage.ImportInput importInput)
        {
            return base.Channel.ImportAsync(importInput);
        }
        
        public Purchasing.WS.AzureStorage.StatusInfo[] PostStatus(Purchasing.WS.AzureStorage.StatusInput statusInput)
        {
            return base.Channel.PostStatus(statusInput);
        }
        
        public System.Threading.Tasks.Task<Purchasing.WS.AzureStorage.StatusInfo[]> PostStatusAsync(Purchasing.WS.AzureStorage.StatusInput statusInput)
        {
            return base.Channel.PostStatusAsync(statusInput);
        }
        
        public Purchasing.WS.AzureStorage.StatusInfo[] GetStatus(string serverName, string userName, string password, string requestId)
        {
            return base.Channel.GetStatus(serverName, userName, password, requestId);
        }
        
        public System.Threading.Tasks.Task<Purchasing.WS.AzureStorage.StatusInfo[]> GetStatusAsync(string serverName, string userName, string password, string requestId)
        {
            return base.Channel.GetStatusAsync(serverName, userName, password, requestId);
        }
        
        public int Test()
        {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<int> TestAsync()
        {
            return base.Channel.TestAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
}
