@using System.Collections
@using Purchasing.Core.Domain
@model Purchasing.Core.Domain.Order

@{
    ViewBag.Title = "Order Details";
}

@section SubNav
{
	<ul class="navigation">
		<li>@Html.ActionLink("Back to List", "Index")</li>
	</ul>
}

<section class="display-form ui-corner-all">
    <header class="ui-corner-top">Order</header>
	
    <ul>
        <li>
			<div class="display-label">All Approvals</div>
			<div class="display-details">@(string.Join(",", Model.Approvals.Where(x => !x.Approved).Select(x => x.Level)))</div>
		</li>
		<li>
			<div class="display-label">Current Approval Level</div>
			<div class="display-details">@ViewBag.CurrentStatus.Name (@ViewBag.CurrentStatus.Level)</div>
		</li>
		<li>
			<div class="display-label">Approvals at current level</div>
			<div class="display-details">@(string.Join(", ", ((IEnumerable<Approval>)ViewBag.Approvals).Select(x => x.User == null ? "[Workgroup]" : x.User.FullName)))</div>
		</li>		
		<li>
			<div class="display-label">Total:</div>
			<div class="display-details">@String.Format("${0:F}", Model.Total())</div>
		</li>		
		<li>
			<div class="display-label">Workgroup:</div>
			<div class="display-details">@Model.Workgroup.Name</div>
		</li>		
		<li>
			<div class="display-label">Status:</div>
			<div class="display-details">@Model.StatusCode.Name</div>
		</li>		
        <li>
			<div class="display-label">EstimatedTax</div>
			<div class="display-details">@String.Format("${0:F}", Model.EstimatedTax)</div>
		</li>
		<li>
			<div class="display-label">ShippingAmount</div>
			<div class="display-details">@String.Format("${0:F}", Model.ShippingAmount)</div>
		</li>
	</ul>

	<footer class="ui-corner-bottom"></footer>

</section>

@using (Html.BeginForm("Approve", "OrderService", new {id = Model.Id}, FormMethod.Post)) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<section class="ui-corner-all">
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	<header class="ui-corner-top">Approve Order</header>

	<div class="section-contents">

		<div class="section-text">
	
			<p>This will create approve the above order, in the context of the selected person</p>
	
		</div>

        <ul>
                <li>
					<div class="editor-label">
						Person:
					</div>
					<div class="editor-field">
						@this.Select("user").Options(((IEnumerable<User>)ViewBag.Users), x=>x.Id, x=>x.FullNameAndId)
					</div>
				</li>
                <li>
                    @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
				    <div class="editor-label">&nbsp;</div>
				    <div class="editor-field">
				    <input class="button" type="submit" value="Approve" /> | @Html.ActionLink("Cancel", "Index")
				    </div>
			    </li>
		</ul>

	</div>
                    
	<footer class="ui-corner-bottom"></footer>
                    
</section>
}