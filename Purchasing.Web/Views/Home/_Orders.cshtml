@using System.Text
@using Purchasing.Web.Controllers

@model Purchasing.Web.Models.FilteredOrderListModel


<table class='dt-table'>
	<thead>
		<tr>        
			<th></th>
			
            @TableRowContent(true, null)		

		</tr>
	</thead>
	<tbody>
@{ var odd = false; }
@foreach (var item in Model.Orders) {
		<tr class="@( odd ? "odd": "even")">
			<td>
				<a href='@Url.Action("Review", "Order", new {id=item.Id})' class="ui-icon ui-icon-document">
				</a>
				<a href='@Url.Action("Edit", "Order", new {id=item.Id})' class="ui-icon ui-icon-pencil">
				</a>
			</td>
            @TableRowContent(false, item)			
		
		</tr>
		odd = !odd;
}
	</tbody>
</table>

@helper TableRowContent (bool tableHeader, Purchasing.Core.Domain.Order item)
{
    var result = new StringBuilder();
   

    if (Model.ColumnPreferences.ShowRequestNumber)
    {
        if (tableHeader)
        {
            result.Append("<th>Request #</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.OrderRequestNumber()) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowPurchaseOrderNumber)
    {
        if (tableHeader)
        {
            result.Append("<th>PO #</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.ReferenceNumber) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowWorkgroup)
    {
        if (tableHeader)
        {
            result.Append("<th>Workgroup</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.Workgroup.Name) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowOrganization)
    {
        if (tableHeader)
        {
            result.Append("<th>Organization</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.Organization.Name) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowVendor)
    {
        if (tableHeader)
        {
            result.Append("<th>Vendor</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.VendorName) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowShipTo)
    {
        if (tableHeader)
        {
            result.Append("<th>Ship to</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.DeliverTo) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowAllowBackorder)
    {
        if (tableHeader)
        {
            result.Append("<th>Allow Backorder</th>");
        }
        else
        {
            var localString = string.Empty;
            if (item.AllowBackorder)
            {
                localString = "<span class='table-bool-good'>Yes</span>";
            }
             else
            {
                localString = "<span class='table-bool-bad'>No</span>";
            }
            result.Append("<td>" + localString + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowRestrictedOrder)
    {
        if (tableHeader)
        {
            result.Append("<th>Restricted?</th>");
        }
        else
        {
            var localString = string.Empty;
            if (item.HasControlledSubstance)
            {
                localString = "<span class='table-bool-bad'>Yes</span>";
            }
            else
            {
                localString = "<span class='table-bool-good'>No</span>";
            }
            result.Append("<td>" + localString + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowHasSplits)
    {
        if (tableHeader)
        {
            result.Append("<th>Has splits?</th>");
        }
        else
        {
            var localString = string.Empty;
            if (item.HasLineSplits || item.Splits.Count > 1)
            {
                localString = "<span class='table-bool-bad'>Yes</span>";
            }
            else
            {
                localString = "<span class='table-bool-good'>No</span>";
            }
            result.Append("<td>" + localString + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowHasAttachments)
    {
        if (tableHeader)
        {
            result.Append("<th>Attch #</th>");
        }
        else
        {
            result.Append("<td>" + item.Attachments.Count() + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowNumberOfLines)
    {
        if (tableHeader)
        {
            result.Append("<th>Lines</th>");
        }
        else
        {
            result.Append("<td>" + item.LineItems.Count() + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowTotalAmount)
    {
        if (tableHeader)
        {
            result.Append("<th>Total $</th>");
        }
        else
        {
            result.Append("<td>" + String.Format("{0:F}", item.GrandTotal()) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowCreatedBy)
    {
        if (tableHeader)
        {
            result.Append("<th>Created By</th>");
        }
        else
        {
            result.Append("<td>" + item.CreatedBy.FullName + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowCreatedDate)
    {
        if (tableHeader)
        {
            result.Append("<th>Date Created</th>");
        }
        else
        {
            result.Append("<td>" + String.Format("{0:d}", item.DateCreated) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowStatus)
    {
        if (tableHeader)
        {
            result.Append("<th>Status</th>");
        }
        else
        {
            result.Append("<td>" + item.StatusCode.Name + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowNeededDate)
    {
        if (tableHeader)
        {
            result.Append("<th>Date Needed</th>");
        }
        else
        {
            result.Append("<td>" + String.Format("{0:d}", item.DateNeeded) + "</td>");
        }
    }

    if (Model.ColumnPreferences.ShowShippingType)
    {
        if (tableHeader)
        {
            result.Append("<th>Shipping Type</th>");
        }
        else
        {
            result.Append("<td>" + item.ShippingType.Name + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowLastActedOnBy)
    {
        if(tableHeader)
        {
            result.Append("<th>Last Acted On</th>");
        }
        else
        {
            result.Append("<td>" + @Html.Encode(item.OrderTrackings.OrderBy(a => a.DateCreated).Last().User.FullName) + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowPeoplePendingAction)
    {
        if(tableHeader)
        {
            result.Append("<th>People Pending</th>");
        }
        else
        {
            
            result.Append("<td>" + @Html.Encode(item.PeoplePendingAction) + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowAccountNumber)
    {
        if(tableHeader)
        {
            result.Append("<th>Account Numbers</th>");
        }
        else
        {

            result.Append("<td>" + @Html.Encode(item.AccountNumbers) + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowOrderedDate)
    {
        if(tableHeader)
        {
            result.Append("<th>Ordered Date</th>");
        }
        else
        {

            result.Append("<td>" + String.Format("{0:d}", item.DateOrdered) + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowApprover)
    {
        if(tableHeader)
        {
            result.Append("<th>Approver</th>");
        }
        else
        {

            result.Append("<td>" + @Html.Encode(item.ApproverName) + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowAccountManager)
    {
        if(tableHeader)
        {
            result.Append("<th>Account Manager</th>");
        }
        else
        {

            result.Append("<td>" + @Html.Encode(item.AccountManagerName) + "</td>");
        }
    }

    if(Model.ColumnPreferences.ShowPurchaser)
    {
        if(tableHeader)
        {
            result.Append("<th>Purchaser</th>");
        }
        else
        {

            result.Append("<td>" + @Html.Encode(item.PurchaserName) + "</td>");
        }
    }
    
    
    if (Model.ColumnPreferences.ShowDaysNotActedOn)
    {
        if (tableHeader)
        {
            result.Append("<th>Days not acted-on</th>");
        }
        else
        {
            var localString = string.Empty;
            if (item.DaysNotActedOn > 7)
            {
                localString = "<td class='warn'>" + item.DaysNotActedOn + "</td>";
            } else
            {
                localString = "<td>" + item.DaysNotActedOn + "</td>";
            }
            
            result.Append(localString);
        }
    }
   
    @Html.Raw(result.ToString())
   
        
}