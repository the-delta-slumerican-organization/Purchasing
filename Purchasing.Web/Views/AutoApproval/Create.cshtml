@model Purchasing.Web.Controllers.Dev.AutoApprovalViewModel

@{
    ViewBag.Title = "Create";
}

@section SubNav
{
	<ul class="navigation">
		<li>@Html.ActionLink("Back to List", "Index")</li>
	</ul>
}

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<section class="ui-corner-all">
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	<header class="ui-corner-top">AutoApprovalViewModel</header>

	<div class="section-contents">

		<div class="section-text">

			@*<h4>Form Header</h4>*@
			@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
			<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>

		</div>

		<ul>
				<li>
				<div class="editor-label">
					@Html.LabelFor(model => model.AutoApproval.MaxAmount) 
				</div>
				<div class="editor-field">
					@Html.EditorFor(model => model.AutoApproval.MaxAmount)
					@Html.ValidationMessageFor(model => model.AutoApproval.MaxAmount)
				</div>
			</li>
				<li>
				<div class="editor-label">
                    <label>Operator</label> 
				</div>
				<div class="editor-field">
                    <input type="radio" name="AutoApproval.LessThan" value="true" checked>Less Than<br>
                    <input type="radio" name="AutoApproval.LessThan" value="false">Equal<br>
                    @Html.ValidationMessageFor(model => model.AutoApproval.LessThan)
				</div>
			</li>
				<li>
				<div class="editor-label">
					@Html.LabelFor(model => model.AutoApproval.IsActive) 
				</div>
				<div class="editor-field">
					@Html.EditorFor(model => model.AutoApproval.IsActive)
					@Html.ValidationMessageFor(model => model.AutoApproval.IsActive)
				</div>
			</li>
				<li>
				<div class="editor-label">
					@Html.LabelFor(model => model.AutoApproval.Expiration) 
				</div>
				<div class="editor-field">
					@Html.EditorFor(model => model.AutoApproval.Expiration)
					@Html.ValidationMessageFor(model => model.AutoApproval.Expiration)
				</div>
			</li>
			<li>
				<div class="editor-label">
					@Html.LabelFor(model => model.AutoApproval.Account) 
				</div>
				<div class="editor-field">
					@this.Select("AutoApproval.Account").Options(Model.Accounts, x=>x.Id, x=>x.Name)
					@Html.ValidationMessageFor(model => model.AutoApproval.Account)
				</div>
			</li>
            <li>(or)</li>
			<li>
				<div class="editor-label">
					@Html.LabelFor(model => model.AutoApproval.TargetUser)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(x=>x.AutoApproval.TargetUser) [KerbID, no lookup yet]
					@Html.ValidationMessageFor(model => model.AutoApproval.TargetUser)
				</div>
			</li>
			<li>
				@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
				<label>&nbsp;</label>
				<input class="button" type="submit" value="Create" /> | @Html.ActionLink("Cancel", "Index")
			</li>
		</ul>
	</div>

	<footer class="ui-corner-bottom"></footer>
	
	</section>
}


