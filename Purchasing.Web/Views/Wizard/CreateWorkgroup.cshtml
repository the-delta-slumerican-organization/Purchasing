@using Purchasing.Web.Models
@model WorkgroupModifyModel

@{
    ViewBag.Title = "Create";
    ViewBag.StepName = "Create Workgroup";
    ViewBag.Skip = "";
    ViewBag.IsAdministrative = false;
    ViewBag.IsAccountSync = false;
}

@Html.Partial("_StatusBar", 0)  
    
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
    @Html.Partial("_Navigation")
    <section>
    
        <header class="ui-corner-all ui-widget-header">Workgroup</header>

        <div class="section-contents">
            <div class="wizard-instructions" id="wizard-instructions-form">
                <p>This is the first step in creating new a new workgroup. </p>
    <p><strong>Disclaimer</strong> - is text that appears on the new order page. It should include information and or links regarding the department's purchasing policies.</p>
                <p><strong>Administrative workgroups</strong> - can see other workgroups within the same primary organization.</p>
                <p><strong>Synchronize Accounts</strong> - Synchronize accounts from KFS for your organization instead of manually adding accounts.</p>
    <p><strong>Primary organization</strong> - is the department or unit that this workgroup belongs to.</p>
    <p><strong>Navigation bar</strong> - contains links for each step, though Create Workgroup must be completed first for subsequent steps to function properly. </p>

            </div>
            <div class="section-text">
                <p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>        
            </div>

            <ul>
                <li>
                    <div class="editor-label required">
                        @Html.LabelFor(model => model.Workgroup.Name)<span>*</span>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Workgroup.Name, new { @class = "wide200 text-box single-line" })
                        @Html.ValidationMessageFor(model => model.Workgroup.Name)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Workgroup.Disclaimer)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Workgroup.Disclaimer, new { @class = "text-box multi-line showTip wide600", title = "Disclaimer is text that appears on the new order page. It should include information and or links regarding the department's purchasing policies." })
                        @Html.ValidationMessageFor(model => model.Workgroup.Disclaimer)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Workgroup.Administrative)
                    </div>
                    <div class="editor-field">
                        <span class="showTip" title="Administrative workgroups can see other workgroups withing the same primary organization.">@Html.EditorFor(model => model.Workgroup.Administrative)</span>
                        @Html.ValidationMessageFor(model => model.Workgroup.Administrative)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Workgroup.SyncAccounts)
                    </div>
                    <div class="editor-field">
                        <span class="showTip" title="Synchronize accounts from KFS for your organization instead of manually adding accounts.">@Html.EditorFor(model => model.Workgroup.SyncAccounts)</span>
                        @Html.ValidationMessageFor(model => model.Workgroup.SyncAccounts)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Workgroup.AllowControlledSubstances)
                    </div>
                    <div class="editor-field">
                        <span class="showTip" title="Show controlled substances fields for workgroups that need to purchase controlled substances.">@Html.EditorFor(model => model.Workgroup.AllowControlledSubstances)</span>
                        @Html.ValidationMessageFor(model => model.Workgroup.AllowControlledSubstances)
                    </div>
                </li>               
                <li>
                    <div class="editor-label required">
                        @Html.LabelFor(model => model.Workgroup.PrimaryOrganization)<span>*</span>
                    </div>
                    <div class="editor-field">                        
                        @this.Select("Workgroup.PrimaryOrganization").Options(Model.Organizations, x => x.Value, x => x.Text).Selected(Model.Workgroup.PrimaryOrganization == null ? string.Empty : Model.Workgroup.PrimaryOrganization.Id)
                        @Html.ValidationMessageFor(x => x.Workgroup.PrimaryOrganization)
                    </div>
                </li>
            </ul>
        </div>

    </section>
    @Html.Partial("_Navigation")
}
