@model Purchasing.Web.Controllers.WorkgroupModifyModel

@{
	ViewBag.Title = "Create";
}

@section AdditionalScripts
{
    <link rel="stylesheet" type="text/css" href="@Url.Css("jquery.AutoCompleteSelect.css")"/>
    <script type="text/javascript" src="@Url.Script("jquery.AutoCompleteSelect.js")"></script>

    <script type="text/javascript">

        $(function () {

            var orgUrl = "@Url.Action("SearchOrganizations")";

            $("#SelectedOrganizations").autoCompleteSelect({ useRemote: false, placeholder: "Search organizations" });
        })

    </script>

    <style type="text/css">
    
        .selector {margin: 2em 0;}
        .selector h3 {margin-bottom: .5em;}
    
        header.title
        {
            border-top: 1px solid #DDDDDD; 
            border-bottom: 1px solid #DDDDDD; 
            font-size: large; 
            padding: 1em;
        }
    
    </style>
}

<h2>Create</h2>

@section SubNav
{
	<ul class="navigation">
		<li>@Html.ActionLink("Back to List", "Index")</li>
	</ul>
}

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<fieldset>
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	<legend>Workgroup</legend>
	@*<h4>Form Header</h4>*@
	@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
	<ul>
		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Workgroup.Name) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Workgroup.Name)
				@Html.ValidationMessageFor(model => model.Workgroup.Name)
			</div>
		</li>
		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Workgroup.IsActive)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Workgroup.IsActive)
				@Html.ValidationMessageFor(model => model.Workgroup.IsActive)
			</div>
		</li>
        <li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Workgroup.PrimaryOrganization) 
			</div>
			<div class="editor-field">
                @Html.DropDownListFor(x=>x.Workgroup.PrimaryOrganization, new SelectList(Model.Organizations, "Value", "Text"))
                @Html.ValidationMessageFor(x=>x.Workgroup.PrimaryOrganization)
			</div>
		</li>
        <li>
			<div class="editor-label">
				@Html.LabelFor(model => model.Organizations) 
			</div>
			<div class="editor-field">
                <div class="selector">
                    <select id="SelectedOrganizations" name="selectedOrganizations" multiple="">
                        @foreach (var a in Model.Organizations)
                        {
                            <option @(a.Selected ? "selected" : "") value="@a.Value">@a.Text</option>
                        }
                    </select>
                </div>
			</div>
		</li>
		<li>
			@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			<div class="editor-label">&nbsp;</div>
			<div class="editor-field">
			<input class="button" type="submit" value="Create" /> | @Html.ActionLink("Cancel", "Index")
			</div>
		</li>
	</ul>
</fieldset>
}
