@model Purchasing.Web.Models.ReportProcessingTimeViewModel

@{
    ViewBag.Title = "Processing Time Report";
    ViewBag.SingleColumn = false;
    ViewBag.LoadTableTools = true;
    ViewBag.LoadFixedHeaders = true;

    Bundles.Reference("scripts/public/single/TableTools.js");
    Bundles.Reference("scripts/public/single/ZeroClipboard.js");
    Bundles.Reference("scripts/public/single/RearrangeDataTable.js");
    Bundles.Reference("scripts/public/single/FixedHeader.js");
}

@section AdditionalScripts
{
    <script type="text/javascript">
        $(function () {
            $('.year-month').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'MM yy',
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            });
        });
    </script>

    <style type="text/css">
        .ui-datepicker-calendar {
            display: none;
        }
        .year-month {
            min-width: 110px;
        }
    </style>
}

@section SubNav
{
	<ul class="navigation">
		<li>@Html.ActionLink("Back to List", "Index", "Report", new { @class = "button" })</li>
	</ul>
}



<h3>Warning, this report may be slow</h3>
<div class="">
    <div class="dt-table-filter-header display-form">
        <!--<header class="ui-widget-header ui-corner-top"></header>-->
        <div class="section-contents">
            @using (Html.BeginForm("ProcessingTime", "Report", FormMethod.Get))
            {
                <ul>
                    <li class="datepicker">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Month)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Month, new { @class = "year-month" })
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.Label("Workgroup")
                        </div>
                        <div class="editor-field">
                            @this.Select("WorkgroupId").Options(Model.Workgroups.OrderBy(x => x.Name), x => x.Id, x => x.NameAndAdmin).Selected(Model.Workgroup != null ? Model.Workgroup.Id.ToString() : string.Empty).FirstOption("--Select Workgroup--")  
                        </div>
                    </li>

                    <li class="apply" style="margin-left: 240px;">
                        <div class="editor-field" style="display:inline">
                            <input class="button" type="submit" value="Apply" />
                        </div>
                    </li>
                </ul>
            }
        </div>
    </div>

</div>

@if (Model.Columns != null)
{
    <table class="datatable">
    <thead>
        <tr>
            <th></th>
            <th>
                Org
            </th>
            <th>
                Workgroup
            </th>
            <th>
                Request Number
            </th>
            <th>Arrived A tPurchaser</th>
            <th>Rerouted To PurchaserDate</th>
            <th>Rerouted To PurchaserName</th>
            <th>ReRouted To PurchaserBy</th>
            <th>Completed By PurchaserDate</th>
            <th>Completed By PurchaserName</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ var odd = false; }
        @foreach (var item in Model.Columns)
        {
            <tr class="@(odd ? "odd" : "even")">
                <td></td>
                <td>
                    @item.Organization
                </td>
                <td>
                    @item.Workgroup
                </td>
                <td>
                    @Html.ActionLink(item.OrderRequestNumber, "Review", "Order", new { id = item.OrderId }, new { target = "_blank" })
                </td>
                <td>
                    @item.ArrivedAtPurchaser
                </td>
                <td>
                    @item.ReroutedToPurchaserDate
                </td>
                <td>
                    @item.ReroutedToPurchaserName
                </td>
                <td>
                    @item.ReRoutedToPurchaserBy
                </td>
                <td>
                    @item.CompletedByPurchaserDate
                </td>
                <td>
                    @item.CompletedByPurchaserName
                </td>
                <td></td>
            </tr>
            odd = !odd;
        }
    </tbody>
</table>

}


@*@if(Model.ReportWorkloads != null)
{
var data = Model.OrgHeaders.OrderBy(x => x.OrgId).ToList();

<table class="report-table">
    
    <thead>
        
        <tr>
            <th></th> 
            @foreach (var ohead in data)
            {
                <th class="workgrouptop" colspan="@ohead.Workgroups.Count">@ohead.OrgId</th>
            }
        </tr>
        
        <tr>
            <th></th>
            @foreach (var head in data)
            {
                foreach (var wk in head.Workgroups)
                {
                    <th>@wk</th>
                }
            }
        </tr>

    </thead>
    
    <tbody>
        
        @foreach (var person in Model.ReportWorkloads.OrderBy(x => x.UserFullName).Select(x=>x.UserFullName).Distinct())
        {
            <tr class="username">
                <th>@person</th>
                @foreach(var org in data)
                {
                    foreach (var col in org.Workgroups)
                    {
                        <td>@Model.ReportWorkloads.Where(a => a.UserFullName == person && a.WorkgroupName == col).Sum(x=> x.Edited + x.Approved)</td>
                    }
                }
            </tr>
            <tr class="edit-row">
                <th>Edit</th>
                @foreach(var org in data)
                {
                    foreach (var col in org.Workgroups)
                    {
                        <td>@Model.ReportWorkloads.Where(a => a.UserFullName == person && a.WorkgroupName == col).Select(a => a.Edited).FirstOrDefault()</td>
                    }
                }
            </tr>
            <tr class="approve-row">
                <th>Approved</th>
                @foreach(var org in data)
                {
                    foreach (var col in org.Workgroups)
                    {
                        <td>@Model.ReportWorkloads.Where(a => a.UserFullName == person && a.WorkgroupName == col).Select(a => a.Approved).FirstOrDefault()</td>
                    }
                }
            </tr>
        }

    </tbody>

</table>    

}
*@


@*
@section AdditionalScripts
{
    <style type="text/css">
        .report-head {padding: 1em 2em; text-align: center;}
        .report-head select {font-size: 1.25em;}
        
        .report-table {background: #fff; border: 1px solid #CCCCCC; box-shadow: #999 5px 5px 5px; border-radius: 5px;}
        
        thead th {text-align: center; padding-top: 5px;}
        tbody td {min-width: 100px; text-align: center; border-left: 1px solid #fff;}
        
        .workgrouptop {font-size: 1.5em; padding-bottom: 0px; padding-top: 10px;}
        
        .approve-row, .edit-row {background: #aedfc4 !important;}
        
        .username > th:first-child { font-weight: bold;}
        .edit-row > th:first-child { padding-left: 30px;}
        .edit-row, .approve-row { background-color: green;}
        .approve-row > th:first-child{ padding-left: 30px;}
        
    </style>
}*@