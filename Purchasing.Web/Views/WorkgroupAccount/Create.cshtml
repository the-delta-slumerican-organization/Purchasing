@model Purchasing.Web.Controllers.WorkgroupAccountViewModel

@{
    Bundles.Reference("css/single/jquery.multiselector.css");
    Bundles.Reference("scripts/public/single/jquery.multiselector.js");
}

@section AdditionalScripts
{
    <script type="text/javascript">

        $(function () {

            var accountUrl = "@Url.Action("SearchAccounts", new {id = Model.Workgroup.Id})";
            var userUrl = "@Url.Action("SearchUsers")";
            

            $("#accounts").multiSelector({dataUrl: accountUrl, placeholder: "Search Account"});
            $("#approvers").multiSelector({dataUrl: userUrl, placeholder: "Search User (optional)"});
            $("#managers").multiSelector({dataUrl: userUrl, placeholder: "Search User (optional)"});
            $("#purchaser").multiSelector({dataUrl: userUrl, placeholder: "Search User (optional)"});
            
        })

    </script>

    <style type="text/css">
    
        .selector {margin: 2em 0;}
        .selector h3 {margin-bottom: .5em;}
    
        header.title
        {
            border-top: 1px solid #DDDDDD; 
            border-bottom: 1px solid #DDDDDD; 
            font-size: large; 
            padding: 1em;
        }
    
    </style>
}

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<fieldset>
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	<legend>WorkgroupAccountViewModel</legend>
	@*<h4>Form Header</h4>*@
	@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>

	<ul>
        <li>
            <div class="selector">
                <h3>Account(s)</h3>
                <select id="accounts" name="accounts" multiple="">
                    @if (Model.Accounts != null) 
                    {
                    foreach (var a in Model.Accounts)
                    {
                        <option selected="" value="@a.Id">@a.Name</option>
                    }  
                    }
                </select>
            </div>
        </li>
        <li>
            <div class="selector">
                <h3>Approver(s)</h3>
                <select id="approvers" name="approvers" multiple="">
                    @if (Model.Users != null)
                    {
                        foreach (var a in Model.Users)
                        {
                            <option selected="" value="@a.Id">@a.DisplayNameAndId</option>
                        }
                    }                    
                </select>
            </div>
        </li>
        <li>
            <div class="selector">
                <h3>Account Manager(s)</h3>
                <select id="managers" name="managers" multiple="">
                    @if (Model.Users != null)
                    {
                        foreach (var m in Model.Users)
                        {
                            <option selected="" value="@m.Id">@m.DisplayNameAndId</option>
                        }
                    }
                </select>
            </div>
        </li>
        <li>
            <div class="selector">
                <h3>Purchaser(s)</h3>
                <select id="purchasers" name="purchasers" multiple="">
                    @if (Model.Users != null)
                    {
                        foreach (var p in Model.Users)
                        {
                            <option selected="" value="@p.Id">@p.DisplayNameAndId</option>
                        }
                    }
                </select>
            </div>
        </li>
        <li>
			@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			<label>&nbsp;</label>
			<input class="button" type="submit" value="Create" /> | @Html.ActionLink("Cancel", "Index", new {id = Model.Workgroup.Id})            
		</li>
	</ul>
	</fieldset>
}

<div>
	@Html.ActionLink("Back to List", "Index", new {id = Model.Workgroup.Id})
</div>

