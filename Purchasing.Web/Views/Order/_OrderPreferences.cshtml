@model OrderModifyModel
           
<section>
    <header class="ui-widget-header ui-corner-top">Order Preferences</header>

    <div class="section-contents">
        
        <div class="section-text">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>    
        </div>

        <ul>
            <li>
			    <div class="editor-label">
				    <label>Date Needed:</label>
			    </div>
			    <div class="editor-field">
                    <input name="dateNeeded" type="text" class="datepicker" title="Optionally specify a date when the delivery needs to arrive by." value="@(Model.Order.DateNeeded.HasValue ? Model.Order.DateNeeded.Value.ToShortDateString() : string.Empty)" />
			    </div>
		    </li>
            <li>
                <div class="editor-label">
				    <label>Shipping Type:</label>
			    </div>
			    <div class="editor-field">
                    @this.Select("shippingType").Options(Model.ShippingTypes, x => x.Id, x => x.Name).Selected(Model.Order.ShippingType != null ? Model.Order.ShippingType.Id : "ST").Title("Shipping Types may have additional charges. Specify in the comments if there is a limit to the cost for shipping.")
			    </div>
            </li>
            <li>
			    <div class="editor-label">
				    <label>Allow Backorder?</label>
			    </div>
			    <div class="editor-field">
                    @*@this.CheckBox("backorder").Checked(Model.Order.AllowBackorder)*@
                    @*<input name="backorder" type="checkbox" />*@
                    <input id="checkbox" name="backorder" type="checkbox" value="true" @(Model.Order.AllowBackorder ? "checked='checked'" : "") />
			    </div>
		    </li>
            <li>
                <div class="editor-label">
                    <label>Comments and/or special instructions:</label>
                </div>
                <div class="editor-field">
                    <textarea name="comments"></textarea>
                </div>
            </li>
            @if (Model.Order.Attachments.Count > 0)
            {
                <li>
                    <div class="editor-label">
                        <label>Existing Attachments:</label>
                    </div>
                    <div class="editor-field">
                        <ul>
                            @foreach (var file in Model.Order.Attachments)
                            {
                                <li>@Html.ActionLink(@file.FileName, "ViewFile", new {fileId = file.Id})</li>
                            }
                        </ul>
                    </div>
                </li>
            }
            <li>
			    <div class="editor-label">
				    <label>Add Attachments:</label>
			    </div>
                <div class="editor-field">
                    <div id="file-uploader">
                        <noscript>
                            <p>Please enable JavaScript to use file uploader.</p>
                            <!-- or put a simple form for upload here -->
                        </noscript>
                    </div>
                </div>
		    </li>
        </ul>

    </div>

</section>
