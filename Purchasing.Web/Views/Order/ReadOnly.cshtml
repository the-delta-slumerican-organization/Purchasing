@model ReadOnlyOrderViewModel

@{
    ViewBag.Title = "Order Details";
}

@section SubNav
{
	<ul class="navigation">
	    <li>@Html.ActionLink("Back to List", "Index")</li>
	</ul>
}

@section AdditionalScripts
{
    <script src="@Url.Script("fileuploader.js")" type="text/javascript"></script>
    <link href="@Url.Css("fileuploader/fileuploader.css")" rel="stylesheet" type="text/css" />
    <style type="text/css">
        #orn {margin: 1em 0;}
        #orn ul {padding: 0;}
        #orn li {margin: 0;}
        #order-details .col1, #order-details .col2 {width: 49.25%; vertical-align: top; text-align: left;}
        #order-details .col1 .display-form, #order-details .col2 .display-form {height: 140px; margin-bottom: 0;}
        
        .item-footer {background-color:#014A81; color: white; }
        .item-footer .label {text-align: right;font-weight: bold;}
        
        .extra-info .line-url, .extra-info .line-notes {display:inline-block; width: 49%; text-align: left;}
        .extra-info .line-url {margin-right: 10px;}
        
        .row-item {background-color: lightgray;}
        .row-split {width: 400px; border: 1px solid lightgray; background-color: lightgreen;}
        .row-split-prob {background-color: lightcoral;}
        .row-split table {border: none;}
        #history table, #notes table, #approvals table { border: none; }
        #history table tr, #notes table tr, #approvals table tr {border-bottom: 1px solid lightgray;}
        #history table tr > td:first-child, #notes table tr > td:first-child, #approvals table tr > td:first-child { width: 150px;}
        #history table tr > td:last-child, #notes table tr > td:last-child #approvals table tr > td:last-child { width: 150px;}
        
        .acct-info .account, .acct-info .subaccount, .acct-info .project {margin-right: 20px;}
        
        .approval-complete { background-color: lightcyan;}
    </style>

    <script type="text/javascript">

        $(function () {

            $("#notes-dialog").dialog({
                modal: true,
                autoOpen: false,
                width: 400,
                buttons: {
                    "Confirm": function () {

                        var note = $("#notes-box").val();
                        $("#notes-box").val("");

                        var url = '@Url.Action("AddComment", "Order")';
                        var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                        var orderid = $("#OrderId").val();

                        $.post(url, { id: orderid, comment: note, __RequestVerificationToken: antiForgeryToken },
                            function (result) {

                                if (result == false) {
                                    alert("There was a problem adding the comment.");
                                }
                                else {
                                    var result = [{ datetime: result.Date, txt: result.Text, user: result.User}];
                                    $.tmpl($("#comment-template"), result).appendTo("#notes table tbody");
                                    $(".notes-not-found").empty();
                                }

                            }
                        );

                        $(this).dialog("close");
                    },
                    "Cancel": function () { $(this).dialog("close"); }
                }
            });

            $("#add-note").click(function () { $("#notes-dialog").dialog("open"); return false; });

            var uploader = new qq.FileUploader({
            // pass the dom node (ex. $(selector)[0] for jQuery users)
                element: document.getElementById('file-uploader'),
                // path to server-side upload script
                action: '@Url.Action("UploadFile", "Order", new {orderId = Model.Order.Id})',
                fileTemplate: '<li>' +
                '<span class="qq-upload-file"></span>' +
                '<span class="qq-upload-spinner"></span>' +
                '<span class="qq-upload-size"></span>' +
                '<a class="qq-upload-cancel" href="#">Cancel</a>' +
                '<span class="qq-upload-failed-text">Failed</span>' +
                '</li>',
                sizeLimit: 4194304, //TODO: add configuration instead of hardcoding to 4MB
                onComplete: function (id, fileName, response) {
                    var newFileContainer = $(uploader._getItemByFileId(id));
                    var fileDisplay = $("<a>").attr('href', '/Order/ViewFile?fileId=' + response.id).html(fileName);
                    newFileContainer.find(".qq-upload-file").empty().append(fileDisplay);
                },
                debug: true
            });
        });

    </script>
}

@* //TODO: What's the point of these outside of form?
@Html.AntiForgeryToken()
@Html.Hidden("OrderId", Model.Order.Id)
*@

<section id="order-details" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Request # @Model.Order.OrderRequestNumber()</header>

    <div class="section-contents">

    <section id="orn">
        <ul>
            <li><strong>Current Review Level:</strong> @Model.Order.StatusCode.Name</li>
            <li><strong>Workgroup:</strong> @Model.Order.Workgroup.Name</li>
            <li><strong>Department:</strong> @Model.Order.Organization.Name</li>
        </ul>
    </section>

    <div class="col1">
    
        <section id="vendor" class="display-form ui-corner-all">

            <header class="ui-corner-top ui-widget-header">Vendor:</header>

            <div class="section-contents">
            
            @if (Model.Order.Vendor != null)
            {
                <div class="vcard">
    
                    <div class="fn">@Model.Order.VendorName</div>
                    <div class="adr">
                        <span class="street-address">@Model.Order.Vendor.Line1</span>
                        <span class="locality">@Model.Order.Vendor.City</span>
                        <span class="region" title="California">@Model.Order.Vendor.State</span>
                        <span class="postal-code">@Model.Order.Vendor.Zip</span>
                    </div>

                </div>
            }
            else
            {
                <div>-- Unspecified --</div>
            }
            </div>

    </section>

    </div>
    <div class="col2">
    
    <section id="deliveryTo" class="display-form ui-corner-all">

        <header class="ui-corner-top ui-widget-header">Deliver To:</header>

        <div class="section-contents">
        <div class="vcard">
    
            <div class="fn">@Model.Order.DeliverTo</div>
            <div class="email">@Model.Order.DeliverToEmail</div>
            <div class="adr">

                <span class="street-address">@Model.Order.Address.Room @Model.Order.Address.Building</span>
                <span class="street-address">@Model.Order.Address.Address</span>
                <span class="locality">@Model.Order.Address.City</span>
                <span class="region" title="California">@Model.Order.Address.State</span>
                <span class="postal-code">@Model.Order.Address.Zip</span>
            </div>
        
        </div>
        </div>

    </section>

    </div>

    <section id="justification" class="display-form ui-corner-all" style="margin-top: 1em;">
    
        <header class="ui-corner-top ui-widget-header">Justification</header>

        <div class="section-contents">
        @Model.Order.Justification
        </div>

    </section>

    </div>

    <footer class="ui-corner-bottom"></footer>

</section>

<section id="line-items" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Line Items</header>

    <div class="section-contents">
    <table>
        <thead>
            <tr>
                <th>Qty.</th>
                <th>Unit</th>
                <th>Catalog #</th>
                <th>Description</th>
                <th>Commodity</th>
                <th>Unit $</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var line in Model.Order.LineItems)
            {
                <tr class="row-item">
                    <td>@line.Quantity</td>
                    <td>@line.Unit</td>
                    <td>@(string.IsNullOrWhiteSpace(line.CatalogNumber) ? "n/a" : line.CatalogNumber)</td>
                    <td>@line.Description</td>
                    <td>@(line.Commodity != null ? line.Commodity.Name : "n/a")</td>
                    <td>@line.UnitPrice</td>
                </tr>
                              
                if (Model.Order.HasLineSplits)
                {
                    <tr>
                        <td colspan="6">
                            <div class="row-split ui-corner-all @(line.UnitPrice * line.Quantity != line.Splits.Sum(a => a.Amount) ? "row-split-prob" : string.Empty)">
                                <table>
                                    <thead>
                                        <tr><td colspan="4">Line Item Split</td></tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var split in line.Splits)
                                        {  
                                            <tr>
                                                <td>@(string.IsNullOrWhiteSpace(split.Account) ? "n/a" : split.Account)</td>
                                                <td>@(string.IsNullOrWhiteSpace(split.SubAccount) ? "n/a" : split.SubAccount)</td>
                                                <td>@(string.IsNullOrWhiteSpace(split.Project) ? "n/a" : split.Project)</td>
                                                <td>@split.Amount</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                            </div>
                        </td>
                    </tr>                    
                }


                if (!string.IsNullOrWhiteSpace(line.Notes) || !string.IsNullOrWhiteSpace(line.Url))
                {
                    <tr>
                        <td colspan="5" class="extra-info">
                            @if (!string.IsNullOrWhiteSpace(line.Url))
                            {
                                <div class="line-url"><strong>Url:</strong> <a href="@line.Url">@line.Url</a></div>    
                            }
                            @if (!string.IsNullOrWhiteSpace(line.Notes))
                            {
                                <div class="line-notes"><strong>Notes:</strong> @line.Notes</div>    
                            }
                            
                        </td>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr class="item-footer">
                <td colspan="4">&nbsp;</td>
                <td class="label">Subtotal:</td>
                <td>@string.Format("${0:f}", Model.Order.TotalFromDb)</td>
            </tr>
            <tr class="item-footer">
                <td colspan="4">&nbsp;</td>
                <td class="label">Estimated Shipping:</td>
                <td>@string.Format("${0:f}", Model.Order.ShippingAmount)</td>            
            </tr>
            <tr class="item-footer">
                <td colspan="4"></td>
                <td class="label">Estimated Tax:</td>
                <td>@string.Format("${0:f}", Model.Order.EstimatedTax)</td>
            </tr>
            <tr class="item-footer">
                <td colspan="4"></td>
                <td class="label">Grand Total:</td>
                <td>@string.Format("${0:f}", Model.Order.GrandTotalFromDb)</td>
            </tr>
        </tfoot>
    </table>
    </div>

    <footer class="ui-corner-bottom"><em>*All totals are estimated, final values are determined after uploaded to KFS.</em></footer>

</section>

@if (!Model.Order.HasLineSplits)
{
    <section id="accounts" class="ui-corner-all display-form">
    
        <header class="ui-corner-top ui-widget-header">Account Information</header>

        <div class="section-contents">
        
            @* Only one "split" meaning this entire order is one account *@
            @if (Model.Order.Splits.Count == 1)
            {
                var split = Model.Order.Splits[0];

                <div class="acct-info">
                    <strong>Account:</strong> <span class="account">@split.Account</span>
                    <strong>SubAccount:</strong> <span class="subaccount">@split.SubAccount</span>
                    <strong>Project:</strong> <span class="project">@split.Project</span>
                </div>
            }
            @* Order split over multiple accounts *@
            else
            {
                <div class="row-split">
                <table class="noicon">
                
                    <thead>
                        <tr>
                            <th>Account</th>
                            <th>SubAccount</th>
                            <th>Project</th>
                            <th>Amount</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var split in Model.Order.Splits)
                        { 
                            <tr>
                                <td>@split.Account</td>
                                <td>@split.SubAccount</td>
                                <td>@split.Project</td>
                                <td>@split.Amount</td>
                            </tr>
                        }
                    </tbody>

                </table>
                </div>

            }

        </div>

        <footer class="ui-corner-bottom"></footer>

    </section>
}

@if (Model.Order.HasControlledSubstance)
{
    <section id="controlled" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Controlled Substances Information</header>

    <div class="section-contents">
    
        @{
    var cs = Model.Order.GetAuthorizationInfo();
        }

        <ul>
            <li><div class="display-label">Authorization Number</div>
                <div class="display-details">@cs.AuthorizationNum</div>
            </li>
            <li><div class="display-label">Class Schedule</div>
                <div class="display-details">@cs.ClassSchedule</div>
            </li>
            <li><div class="display-label">Use</div>
                <div class="display-details">@cs.Use</div>
            </li>
            <li><div class="display-label">Storage Site</div>
                <div class="display-details">@cs.StorageSite</div>
            </li>
            <li><div class="display-label">Custodian</div>
                <div class="display-details">@cs.Custodian</div>
            </li>
            <li><div class="display-label">End User</div>
                <div class="display-details">@cs.EndUser</div>
            </li>
        </ul>

    </div>

    </section>
}

@if (Model.Order.Workgroup.PrimaryOrganization.CustomFields.Count > 0)
{
<section id="customFields" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Custom Fields</header>

    <div class="section-contents">
    
        <ul>
            @foreach(var cf in Model.Order.Workgroup.PrimaryOrganization.CustomFields.OrderBy(a => a.Rank))
            {
                var answer = Model.Order.CustomFieldAnswers.Where(a => a.CustomField == cf).FirstOrDefault();

                <li><div class="display-label">@cf.Name</div>
                    <div class="display-details">@(answer != null ? answer.Answer : "n/a")</div>
                </li>    
            }
        </ul>

    </div>

</section>    
}

<section id="approvals" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Approvals</header>

    <div class="section-contents">
    
        <table class="noicon">
            <tbody>
                @foreach (var approval in Model.Order.Approvals.OrderBy(a => a.StatusCode.Level))
                {
                    var approvalDisplayName = (approval.User != null ? approval.User.FullName : string.Format("[Any Workgroup {0}]", approval.StatusCode.Name)) + (approval.SecondaryUser != null ? "or " + approval.SecondaryUser.FullName : string.Empty);
                    <tr class='@(approval.Completed ? "approval-complete" : "approval-incomplete")'>
                        <td>@approval.StatusCode.Name</td>
                        <td>@approvalDisplayName</td>
                        <td>@(approval.Completed ? "Accepted" : "Pending")</td>
                        @if (Model.CanEditOrder)
                        {
                            <td>@(((List<Purchasing.Core.Domain.Approval>)Model.ExternalApprovals).Contains(approval) ? "External" : string.Empty)</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    
    </div>

</section>

<section id="notes" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">
        <div class="col1">Order Notes</div>
        <div class="col2">
            @if (Model.CanEditOrder)
            {
                <a href="#" class="button" id="add-note">Add Note</a>
            }
        </div>
    </header>

    <div class="section-contents">
        @if (Model.Order.OrderComments.Count == 0)
        {
            <span class="notes-not-found">There Are No Notes Attached To This Order</span>
        }
        <table class="noicon">
            <tbody>
                @foreach (var notes in Model.Order.OrderComments)
                {
                    <tr>
                        <td>@notes.DateCreated.ToString("d")</td>
                        <td>@notes.Text</td>
                        <td>@notes.User.FullName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @*<footer class="ui-corner-bottom"></footer>*@

</section>

<div id="notes-dialog" title="Add Order Notes">

<textarea id="notes-box" style="width: 370px; height: 110px;"></textarea>

</div>

<section id="attachments" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Attachments</header>

    <div class="section-contents">
        @if (Model.Order.Attachments.Count == 0)
        {
            <span class="attachments-not-found">There Are No Files Attached To This Order</span>
        }
        <ul>            
            @foreach (var attachment in Model.Order.Attachments)
            {
                <li>
                    <a href="@Url.Action("ViewFile", new { fileId = @attachment.Id })">@attachment.FileName</a> [uploaded by @attachment.User.FullName on @attachment.DateCreated.ToShortDateString()]                    
                </li>
            }
        </ul>
        @if (Model.CanEditOrder)
        {
            <div>
                <div id="file-uploader">
                    <noscript>
                        <p>Please enable JavaScript to use file uploader.</p>
                        <!-- or put a simple form for upload here -->
                    </noscript>
                </div>
            </div>
        }
    </div>
</section>

<section id="history" class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Order History</header>

    <div class="section-contents">
        <table class="noicon">
            <tbody>
                @foreach (var tracking in Model.Order.OrderTrackings.OrderBy(a => a.DateCreated).ThenBy(t=>t.StatusCode.Level))
                {
                    <tr>
                        <td>@tracking.DateCreated.ToString("d")</td>
                        <td>@tracking.Description</td>
                        <td>@tracking.StatusCode.Name</td>
                        <td>@tracking.User.FullName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <footer class="ui-corner-bottom"></footer>

</section>

@if (Model.CanEditOrder)
{
 <section class="ui-corner-all display-form">

    <header class="ui-corner-top ui-widget-header">Review Decision</header>

    <div class="section-contents">
    
        <ul>
            <li><div class="display-label">&nbsp;</div>
                <div class="display-details">
                    @using (Html.BeginForm("Approve", "OrderMockup"))
                    {
                        @Html.Hidden("id", Model.Order.Id)
                        @Html.AntiForgeryToken()
                        <input type="submit" class="button" value="Approve"/>
                    }

                    <input type="button" class="button" value="Deny" />
                </div>
            </li>
        </ul>

    </div>

</section>   
}

<script id="comment-template" type="text/x-jquery-tmpl">
    <tr>
        <td>${datetime}</td>
        <td>${txt}</td>
        <td>${user}</td>
    </tr>
</script>
