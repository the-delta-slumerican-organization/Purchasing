@using Purchasing.Core.Domain
@model Purchasing.Core.Domain.EmailPreferences

@{
	ViewBag.Title = "EmailPreferences";

}

@section SubNav
{
	<ul class="navigation">
		<li>@Html.ActionLink("Back to Profile", "Profile")</li>
	</ul>
}

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<fieldset>
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	<legend>EmailPreferences</legend>
	@*<h4>Form Header</h4>*@
	@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
	<ul>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterOrderSubmission) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterOrderSubmission)
				@Html.ValidationMessageFor(model => model.RequesterOrderSubmission)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterApproverApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterApproverApproved)
				@Html.ValidationMessageFor(model => model.RequesterApproverApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterApproverChanged) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterApproverChanged)
				@Html.ValidationMessageFor(model => model.RequesterApproverChanged)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterAccountManagerApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterAccountManagerApproved)
				@Html.ValidationMessageFor(model => model.RequesterAccountManagerApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterAccountManagerChanged) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterAccountManagerChanged)
				@Html.ValidationMessageFor(model => model.RequesterAccountManagerChanged)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterPurchaserAction) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterPurchaserAction)
				@Html.ValidationMessageFor(model => model.RequesterPurchaserAction)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterPurchaserChanged) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterPurchaserChanged)
				@Html.ValidationMessageFor(model => model.RequesterPurchaserChanged)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterKualiProcessed) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterKualiProcessed)
				@Html.ValidationMessageFor(model => model.RequesterKualiProcessed)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.RequesterKualiApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RequesterKualiApproved)
				@Html.ValidationMessageFor(model => model.RequesterKualiApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.ApproverAccountManagerApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.ApproverAccountManagerApproved)
				@Html.ValidationMessageFor(model => model.ApproverAccountManagerApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.ApproverAccountManagerDenied) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.ApproverAccountManagerDenied)
				@Html.ValidationMessageFor(model => model.ApproverAccountManagerDenied)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.ApproverPurchaserProcessed) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.ApproverPurchaserProcessed)
				@Html.ValidationMessageFor(model => model.ApproverPurchaserProcessed)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.ApproverKualiApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.ApproverKualiApproved)
				@Html.ValidationMessageFor(model => model.ApproverKualiApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.ApproverOrderCompleted) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.ApproverOrderCompleted)
				@Html.ValidationMessageFor(model => model.ApproverOrderCompleted)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.AccountManagerPurchaserProcessed) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.AccountManagerPurchaserProcessed)
				@Html.ValidationMessageFor(model => model.AccountManagerPurchaserProcessed)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.AccountManagerKualiApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.AccountManagerKualiApproved)
				@Html.ValidationMessageFor(model => model.AccountManagerKualiApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.AccountManagerOrderCompleted) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.AccountManagerOrderCompleted)
				@Html.ValidationMessageFor(model => model.AccountManagerOrderCompleted)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.PurchaserKualiApproved) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.PurchaserKualiApproved)
				@Html.ValidationMessageFor(model => model.PurchaserKualiApproved)
			</div>
		</li>

		<li>
			<div class="editor-label">
				@Html.LabelFor(model => model.PurchaserOrderCompleted) 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.PurchaserOrderCompleted)
				@Html.ValidationMessageFor(model => model.PurchaserOrderCompleted)
			</div>
		</li>
        <li>
			<div class="editor-label">
				@Html.LabelFor(model => model.NotificationType) 
			</div>
			<div class="editor-field">
                @this.Select("NotificationType").Options(Enum.GetNames(typeof(EmailPreferences.NotificationTypes)).ToList()).Selected(Model.NotificationType.ToString())
				@Html.ValidationMessageFor(model => model.NotificationType)
			</div>
		</li>

		@Html.HiddenFor(model => model.Id)

		<li>
			@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			<div class="editor-label">&nbsp;</div>
			<div class="editor-field">
			<input class="button" type="submit" value="Edit" /> | @Html.ActionLink("Cancel", "Profile")
			</div>
		</li>
	</ul>
</fieldset>
}





