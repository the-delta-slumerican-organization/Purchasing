@model Purchasing.Core.Domain.ColumnPreferences

@{
	ViewBag.Title = "Column Preferences";
}


@section SubNav
{
    <ul class="navigation">
        <li>@Html.ActionLink("Back to Profile", "Profile")</li>
        @if(@ViewBag.FromList){
        <li>@Html.ActionLink("Back to Order List", "Index2", "JamesTest")</li> @* TODO: Replace this with the correct link *@
        }
    </ul>
}

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
<section class="ui-corner-all">
	<header class="ui-corner-top">ColumnPreferences</header>

	<div class="section-contents">

		
		<ul>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowRequestNumber) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowRequestNumber)
						@Html.ValidationMessageFor(model => model.ShowRequestNumber)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowPurchaseOrderNumber) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowPurchaseOrderNumber)
						@Html.ValidationMessageFor(model => model.ShowPurchaseOrderNumber)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowWorkgroup) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowWorkgroup)
						@Html.ValidationMessageFor(model => model.ShowWorkgroup)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowOrganization) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowOrganization)
						@Html.ValidationMessageFor(model => model.ShowOrganization)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowVendor) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowVendor)
						@Html.ValidationMessageFor(model => model.ShowVendor)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowShipTo) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowShipTo)
						@Html.ValidationMessageFor(model => model.ShowShipTo)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowAllowBackorder) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowAllowBackorder)
						@Html.ValidationMessageFor(model => model.ShowAllowBackorder)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowRestrictedOrder) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowRestrictedOrder)
						@Html.ValidationMessageFor(model => model.ShowRestrictedOrder)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowHasSplits) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowHasSplits)
						@Html.ValidationMessageFor(model => model.ShowHasSplits)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowHasAttachments) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowHasAttachments)
						@Html.ValidationMessageFor(model => model.ShowHasAttachments)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowNumberOfLines) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowNumberOfLines)
						@Html.ValidationMessageFor(model => model.ShowNumberOfLines)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowTotalAmount) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowTotalAmount)
						@Html.ValidationMessageFor(model => model.ShowTotalAmount)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowCreatedBy) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowCreatedBy)
						@Html.ValidationMessageFor(model => model.ShowCreatedBy)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowCreatedDate) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowCreatedDate)
						@Html.ValidationMessageFor(model => model.ShowCreatedDate)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowStatus) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowStatus)
						@Html.ValidationMessageFor(model => model.ShowStatus)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowNeededDate) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowNeededDate)
						@Html.ValidationMessageFor(model => model.ShowNeededDate)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowShippingType) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowShippingType)
						@Html.ValidationMessageFor(model => model.ShowShippingType)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowDaysNotActedOn) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowDaysNotActedOn)
						@Html.ValidationMessageFor(model => model.ShowDaysNotActedOn)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowLastActedOnBy) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowLastActedOnBy)
						@Html.ValidationMessageFor(model => model.ShowLastActedOnBy)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowPeoplePendingAction) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowPeoplePendingAction)
						@Html.ValidationMessageFor(model => model.ShowPeoplePendingAction)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowAccountNumber) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowAccountNumber)
						@Html.ValidationMessageFor(model => model.ShowAccountNumber)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowOrderedDate) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowOrderedDate)
						@Html.ValidationMessageFor(model => model.ShowOrderedDate)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowApprover) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowApprover)
						@Html.ValidationMessageFor(model => model.ShowApprover)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowAccountManager) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowAccountManager)
						@Html.ValidationMessageFor(model => model.ShowAccountManager)
					</div>
				</li>
						<li>
					<div class="editor-label">
						@Html.LabelFor(model => model.ShowPurchaser) 
					</div>
					<div class="editor-field">
						@Html.EditorFor(model => model.ShowPurchaser)
						@Html.ValidationMessageFor(model => model.ShowPurchaser)
					</div>
				</li>
						@Html.HiddenFor(model => model.Id)
					<li>

				<div class="editor-label">&nbsp;</div>
				<div class="editor-field">
				<input class="button" type="submit" value="Edit" /> | @Html.ActionLink("Cancel", "Profile")
				</div>
			</li>
		</ul>

	</div>

	<footer class="ui-corner-bottom"></footer>
	
</section>
}



