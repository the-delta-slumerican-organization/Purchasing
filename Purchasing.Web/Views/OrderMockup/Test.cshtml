@model Purchasing.Web.Controllers.OrderMockupController.OrderModifyModel

@{
    ViewBag.Title = "Test";
}

@section AdditionalScripts{
    <link href="@Url.Css("fileuploader/fileuploader.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Css("jquery.qtip.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Css("qunit.css")" rel="stylesheet" type="text/css" />
    <style>
        .help
        {
            font-style: italic;
            margin-bottom: 1em;
        }
        .line-item-row
        {
            background-color: #D5DBE1;
        }
        .sub-line-item
        {
            border-spacing: 0;
            border: 0;
            background-color:#F2EBCC;
        }
        .sub-line-item-split
        {
            border-spacing: 0;
            border: 0;
            background-color:#B2C9C5;
        }
        
        #order-splits > li { background-color: #B2C9C5; margin:1em; padding:2em;}
        
        form input[type='text'].quantity { min-width: 0; width: 40px;}
        form select.unit { min-width: 80px; width: 40px;}
        form input[type='text'].catalog-num { min-width: 0; width: 100px;}
        form input[type='text'].description { min-width: 0; width: 520px;}
        form input[type='text'].price,#shipping, #tax,#freight  { min-width: 0; width: 40px;}
        
        form select.account-subaccount, form select.account-number {min-width: 130px; width: 130px;}
        form input.account-projectcode {min-width: 80px; width: 80px;}

        .account-container, .account-split-amounts {display: inline-block;}
        .account-container {margin-right: 80px;}

        #accounts-search-dialog header { display: inline-block; width: 100%; border-bottom: 1px solid #DDDDDD; padding-bottom: 3px;}
        #accounts-search-dialog section { padding: 1em; }
        #accounts-search-dialog select, #accounts-search-dialog input[type='text'] {padding: .5em;}

        #accounts-search-dialog-results .selected {background-color: lightblue;}
        
        #search-vendor-dialog input[type='text'], #search-vendor-dialog select {padding: .5em; min-width: 300px; width: 300px;}
        #search-vendor-dialog section {padding: 1em; margin: 10px 0;}

        #add-line-item {}
        .invisible { display:none; }
        
        .line-item-details, .line-item-splits {display: none;}
        
        .invalid-number-warning
        {
            background-color: #FFDCDC;
        }
        
        td {text-align: left;}        
        
        .qq-upload-button
        {
             -moz-border-radius-topleft: 4px; -webkit-border-top-left-radius: 4px; -khtml-border-top-left-radius: 4px; border-top-left-radius: 4px; 
             -moz-border-radius-topright: 4px; -webkit-border-top-right-radius: 4px; -khtml-border-top-right-radius: 4px; border-top-right-radius: 4px;
             -moz-border-radius-bottomleft: 4px; -webkit-border-bottom-left-radius: 4px; -khtml-border-bottom-left-radius: 4px; border-bottom-left-radius: 4px;
             -moz-border-radius-bottomright: 4px; -webkit-border-bottom-right-radius: 4px; -khtml-border-bottom-right-radius: 4px; border-bottom-right-radius: 4px;
        }
        
    </style>
    @*<script src="//ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js"></script>*@
    <script src="@Url.Script("jquery.tmpl.min.js")"></script>
    <script src="@Url.Script("OrderMockup.js")"></script>
    <script src="@Url.Script("OrderMockupEdit.js")"></script>
    <script src="@Url.Script("fileuploader.js")"></script>
    <script src="@Url.Script("jquery.qtip.min.js")"></script>
    <script src="@Url.Script("qunit.js")"></script>
    <script type="text/javascript">

        purchasing.options({ 
                AddVendorUrl: "@Url.Action("AddVendor")", 
                AddAddressUrl: "@Url.Action("AddAddress")", 
                UploadUrl: '@Url.Action("UploadFile")',
                KfsSearchUrl: '@Url.Action("SearchKfsAccounts", "Accounts")',
                KfsSearchSubAccountsUrl: '@Url.Action("SearchSubAccounts", "Accounts")',
                AddKfsVendorUrl: '@Url.Action("AddKfsVendor", "WorkgroupVendor")',
                SearchVendorUrl: '@Url.Action("SearchVendor", "WorkgroupVendor")',
                SearchVendorAddressUrl: '@Url.Action("SearchVendorAddress", "WorkgroupVendor")',
                SearchCommodityCodeUrl: '@Url.Action("SearchCommodityCodes")',
                GetLineItemsAndSplitsUrl: '@Url.Action("GetTestLineItemsAndSplits")'
            });

        $(function () {
            
            purchasing.init(); //Init all base order form js

            purchasing.initEdit(); //Add in the edit functionality

            runUnitTests();
        });
        
        function runUnitTests() {
            $.ajaxSetup({ async: false }); //for unit tests we always want to wait for the ajax function to complete before moving on
            
            module("vendor section");

            test("clicking add new vendor popups up vendor dialog", function() {
                expect(2);
                $("#vendor-dialog").dialog('close');
                equal($("#vendor-dialog:visible").length, 0, "vendor dialog should be closed");
                $("#add-vendor").click();
                equal($("#vendor-dialog:visible").length, 1, "vendor dialog should show after click");
                $("#vendor-dialog").dialog('close');
            });

            test("adding vendor should create vendor in select list", function() {
                var startingVendorCount = $("#vendor>option").length;
                
                $("#add-vendor").click();
                $(":input", "#vendor-form").val("X");

                $(".ui-dialog-buttonpane:visible button:first").click();
                
                var newVendorCount = $("#vendor > option").length;
                equal(newVendorCount, startingVendorCount + 1, "a new vendor should be added");
            });
            
            test("clicking search vendor popups up search dialog", function() {
                expect(2);
                $("#search-vendor-dialog").dialog('close');
                equal($("#search-vendor-dialog:visible").length, 0, "vendor dialog should be closed");
                $("#search-vendor").click();
                equal($("#search-vendor-dialog:visible").length, 1, "vendor dialog should show after click");
                $("#search-vendor-dialog").dialog('close');
            });
            
            module("shipping address section");

            test("adding shipping address should create address in select list", function() {
                var startingCount = $("#shipAddress > option").length;
                
                $("#add-address").click();
                $(":input", "#address-form").val("X");
                
                $(".ui-dialog-buttonpane:visible button:first").click(); //create
                
                var newCount = $("#shipAddress > option").length;
                equal(newCount, startingCount + 1, "a new ship address should be added");
            });

            module("restricted order section");

            test("clicking restricted order shows restricted fields", function() {
                expect(3);
                var fields = $("#order-restricted-fields");

                ok(fields.is(":visible") === false, "should not be able to see the fields by default");

                var checkbox = $("#order-restricted-checkbox");
                checkbox[0].checked = true;
                checkbox.click();
                
                ok(fields.is(":visible"), "fields should be visible after clicking restricted checkbox");
                
                checkbox.click();
                checkbox[0].checked = false;
                
                ok(fields.is(":visible") === false, "should not be able to see the fields after hiding again");
            });

            module("line/account modification section");

            test("modification of line/account should be off by default", function() {
                var lineAccountSections = "#line-items-section, #order-split-section, #order-account-section";

                var inputs = $(":input", lineAccountSections);
                var buttons = $("a.button", lineAccountSections);

                ok(inputs.is(":visible"), "inputs should be visible");
                ok(inputs.is(":enabled") === false, "no inputs should be enabled");
                ok(buttons.is(":visible") === false, "no buttons should be visible");
                
            });

            test("clicking enable modification should enable line/account info", function() {
                $("#item-modification-button").trigger('click', { automate: true });
                ok(false, "need to test that line/account info is now edit-enabled");
            });
        }
    </script>
}

<h1 id="qunit-header">QUnit example</h1>
<h2 id="qunit-banner"></h2>
<div id="qunit-testrunner-toolbar"></div>
<h2 id="qunit-userAgent"></h2>
<ol id="qunit-tests"></ol>
<div id="qunit-fixture">test markup, will be hidden</div>

@using (Html.BeginForm())
{
    @Html.Hidden("adjustRouting", false)

    @Html.Partial("_OrderForm")
}

@Html.Partial("_OrderTemplates")

<script id="item-modification-template" type="text/x-jquery-tmpl">
<section id="item-modification-section">
    <header>Line Item And Account Modification</header>

    <div class="section-contents">
        
        <div class="section-text">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>    
        </div>
        <div>
            <ul>
                <li>
					<div class="editor-label">
						
					</div>
					<div class="editor-field">
                        <a href="#" class="button" id="item-modification-button">Enable modification</a>
					</div>
				</li>
            </ul>
        </div>
    </div>

</section>
</script>

@Html.Partial("_OrderDialogs")