@model Purchasing.Core.Domain.Workgroup

@{
	ViewBag.Title = "Addresses";
}

@helper ShowUnlessEmpty(string toShow, string showIfEmpty = "N/A"){<text>@(string.IsNullOrWhiteSpace(toShow) ? showIfEmpty : toShow)</text>}

@section SubNav
{
	<ul class="navigation">
		<li>@Html.ActionLink("Workgroup Overview", "Manage", "WorkgroupManagement", new { id = Model.Id }, null)</li>
	</ul>
}

@section AdditionalScripts {
	<style>
		.address-box {            
			padding: 1em;
			margin: 1em;
			background-color: #EED;
			border: 1px solid #CCC;
		}
		
		.address-box:hover
		{
		    background-color: #efefef;
		}
		
		.highlight-new
		{
		    background-color: #FFFF47
		}
		
		.highlight-new:hover
		{
		    background-color: #FFFF55
		}
		
		.address-list
		{
		    list-style-type: none;
		}
	</style>
    <script src="//ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js"></script>
    <script>
        //Self-Executing Anonymous Function
        (function (purchasing, $) {
            //Private Property
            var options = {};

            purchasing.AddressData = { Id: null, Name: null, Phone: null, Room: null, Building: null, Address: null, City: null, State: null, Zip: null };

            //Public Method
            purchasing.options = function (o) {
                $.extend(options, o);
            };

            purchasing.init = function () {
                $(".edit-address").live("click", function (e) {
                    e.preventDefault();

                    var id = $(this).data("id");
                    var addressBox = $(".address-box[data-id=" + id + "]");
                    var addressList = addressBox.find(".address-list");

                    //purchasing.ReadAddressData(id, addressList, false);
                    purchasing.ReadAddressData(id, addressList, false);

                    console.log(purchasing.AddressData);

                    addressBox.empty();

                    $("#address-edit-template").tmpl(purchasing.AddressData).appendTo(addressBox);
                });

                $(".save-address").live("click", function (e) {
                    e.preventDefault();

                    var id = $(this).data("id");
                    var addressBox = $(".address-box[data-id=" + id + "]");
                    var addressList = addressBox.find(".address-list");

                    purchasing.ReadAddressData(id, addressList, true);

                    console.log(purchasing.AddressData);

                    addressBox.empty();

                    $("#address-display-template").tmpl(purchasing.AddressData).appendTo(addressBox);

                    $.post(options.modifyUrl, purchasing.AddressData, function (data) {
                        /*assume everything is gravy*/
                        //need to inject the returned data-id
                        addressBox.attr("data-id", data.id);
                        addressBox.find(".edit-address").attr("data-id", data.id);
                        addressBox.removeClass("highlight-new"); //remove highlight for newly created addresses
                    });
                });

                $("#create-address").click(function (e) {
                    e.preventDefault();

                    var data = { Name: "name", Address: "23 west", City: "City", State: "CA", Zip: "90210", Id: 0 }; //good data just for testing
                    $("#address-new-template").tmpl(data).prependTo("#address-container");
                });
            };

            purchasing.ReadAddressData = function (id, list, isEditMode) {
                var addressList = list;
                purchasing.AddressData.Id = id;
                purchasing.AddressData.Name = getElementData(addressList.find(".address-name"), isEditMode);
                purchasing.AddressData.Phone = getElementData(addressList.find(".address-phone"), isEditMode);
                purchasing.AddressData.Room = getElementData(addressList.find(".address-room"), isEditMode);
                purchasing.AddressData.Building = getElementData(addressList.find(".address-building"), isEditMode);
                purchasing.AddressData.Address = getElementData(addressList.find(".address-address"), isEditMode);
                purchasing.AddressData.City = getElementData(addressList.find(".address-city"), isEditMode);
                purchasing.AddressData.State = getElementData(addressList.find(".address-state"), isEditMode);
                purchasing.AddressData.Zip = getElementData(addressList.find(".address-zip"), isEditMode);
            };

            function getElementData(el, useVal) {
                return useVal ? el.val() : el.text();
            };

        } (window.purchasing = window.purchasing || {}, jQuery));
        
        purchasing.options({ modifyUrl: '@Url.Action("EditAddress", "WorkgroupManagement", new { WorkgroupId = Model.Id })' });
        
        $(function () {
            purchasing.init();
        });
    </script>
}

<h3>Manage Addresses for workgroup <em>@Model.Name</em></h3>
<br/>
<h4><a id="create-address" href="#">Add new address</a></h4>

<div id="address-container">
@foreach (var address in Model.Addresses)
{
    <div class="address-box" data-id="@address.Id">
        <span style="float:right"><a class="edit-address" data-id="@address.Id" href="#">Edit</a></span>
        <ul class="address-list">
            <li><strong>Name:</strong> <span class="address-name">@ShowUnlessEmpty(address.Name)</span></li>
            <li><strong>Phone:</strong> <span class="address-phone">@ShowUnlessEmpty(address.Phone)</span></li>
            <li><strong>Room:</strong> <span class="address-room">@ShowUnlessEmpty(address.Room)</span></li>
            <li><strong>Building:</strong> <span class="address-building">@ShowUnlessEmpty(address.Building)</span></li>
            <li><strong>Address:</strong> 
                    <span class="address-address">@address.Address</span>, 
                    <span class="address-city">@address.City</span>, 
                    <span class="address-state">@address.State</span>, 
                    <span class="address-zip">@address.Zip</span>
            </li>
        </ul>
    </div>
}
</div>

<script id="address-template" type="text/x-jquery-tmpl"> 
	<li><strong>Name:</strong> <span class="address-name">${Name}</span></li>
    <li><strong>Phone:</strong> <span class="address-phone">${Phone}</span></li>
    <li><strong>Room:</strong> <span class="address-room">${Room}</span></li>
    <li><strong>Building:</strong> <span class="address-building">${Building}</span></li>
    <li><strong>Address:</strong> 
            <span class="address-address">${Address}</span>, 
            <span class="address-city">${City}</span>, 
            <span class="address-state">${State}</span>, 
            <span class="address-zip">${Zip}</span>
    </li>
</script> 

<script id="address-edit-template" type="text/x-jquery-tmpl"> 
    <ul class="address-list">
	    <li><strong>Name:</strong> <input type="text" class="address-name" value="${Name}"/></li>
        <li><strong>Phone:</strong> <input type="text" class="address-phone" value="${Phone}"/></li>
        <li><strong>Room:</strong> <input type="text" class="address-room" value="${Room}"/></li>
        <li><strong>Building:</strong> <input type="text" class="address-building" value="${Building}"/></li>
        <li><strong>Address:</strong> 
                <input type="text" class="address-address" value="${Address}"/>, 
                <input type="text" class="address-city" value="${City}"/>, 
                <input type="text" class="address-state" value="${State}"/>, 
                <input type="text" class="address-zip" value="${Zip}"/>
        </li>
    </ul>
    <input class="save-address" data-id="${Id}" type="submit" value="Save" /><a href="#">Cancel [TODO]</a>
</script> 

<script id="address-new-template" type="text/x-jquery-tmpl">
    <div class="address-box highlight-new" data-id="${Id}">
        <ul class="address-list">
            {{tmpl "#address-edit-template"}}
        </ul>
    </div>
</script>

<script id="address-display-template" type="text/x-jquery-tmpl">
    <span style="float:right"><a class="edit-address" data-id="${Id}" href="#">Edit</a></span>
    <ul class="address-list">
        {{tmpl "#address-template"}}
    </ul>
</script>