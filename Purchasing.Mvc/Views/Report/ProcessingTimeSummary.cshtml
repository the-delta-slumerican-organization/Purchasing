@using NPOI.SS.Formula.Functions
@model Purchasing.Mvc.Controllers.ReportProcessingTimeSummaryViewModel

@{
    ViewBag.Title = "ProcessingTimeSummary";
}

<h2>ProcessingTimeSummary</h2>

<p>
    Averages:<br />Average Time to Complete: @TimeSpan.FromMinutes(Model.Columns.AverageTimeToCompletion.Value).ToString("dd':'hh':'mm")<br/>
    Average time to Approve: @TimeSpan.FromMinutes(Model.Columns.AverageTimeToApprover.Value).ToString("dd':'hh':'mm")<br />
    Average time to Account Manager: @TimeSpan.FromMinutes(Model.Columns.AverageTimeToAccountManagers.Value).ToString("dd':'hh':'mm")<br />
    Average time to Purchase: @TimeSpan.FromMinutes(Model.Columns.AverageTimeToPurchaser.Value).ToString("dd':'hh':'mm")
</p>
<p>
    All times are displayed as (Days:Hours:Minutes)
</p>.v
<table class="datatable no-icon-table">
    <thead>
        <tr>
            <th>View</th>
            <th>
                Date Created
            </th>
            <th>
                Workgroup
            </th>
            <th>Time to Completion</th>
            <th>Time to Approve</th>
            <th>Approve</th>
            <th>Time to Account Manager</th>
            <th>Account Manager</th>
            <th>Time to Purchaser</th>
            <th>Purchaser</th>
            <th>Complete/Status</th>
           
        </tr>
    </thead>
    <tbody>
        @{ var odd = false; }
        @foreach (var item in Model.Columns.OrderTrackingEntities)
        {
            <tr class="@(odd ? "odd" : "even")">
                <td>
                    <a href='@Url.Action("Review", "Order", new {id=item.OrderId})' class="ui-icon ui-icon-document" title="Review order" target="_blank"></a>
                </td>
                <td>
                    @item.OrderCreated.ToShortDateString()
                </td>
                <td>
                    @item.WorkgroupName
                </td>
                
                <td>
                    @if (item.MinutesToCompletion != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToCompletion.Value).ToString("dd':'hh':'mm")
                    } 
                </td>
                <td>
                    @if (item.MinutesToApprove != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToApprove.Value).ToString("dd':'hh':'mm")
                    }
                </td>
                <td>
                    @item.ApproverName
                </td>
                <td>
                    @if (item.MinutesToAccountManagerComplete != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToAccountManagerComplete.Value).ToString("dd':'hh':'mm")
                    }
                </td>
                <td>
                    @item.AccountManagerName
                </td>
                <td>
                    @if (item.MinutesToPurchaserComplete != null)
                    {
                        @TimeSpan.FromMinutes(item.MinutesToPurchaserComplete.Value).ToString("dd':'hh':'mm")
                    }
                </td>
                <td>
                    @item.PurchaserName
                </td>
                <td>
                    @item.IsComplete 
                    @if (item.StatusCode != "CP")
                    {
                        @item.Status
                    }
                </td>
            </tr>
            odd = !odd;
        }
    </tbody>
</table>
